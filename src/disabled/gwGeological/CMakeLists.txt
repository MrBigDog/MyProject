IF   (DYNAMIC_GWEARTH)
    ADD_DEFINITIONS(-DGWEARTH_LIBRARY)
ELSE (DYNAMIC_GWEARTH)
    ADD_DEFINITIONS(-DGWEARTH_LIBRARY_STATIC)
ENDIF(DYNAMIC_GWEARTH)

IF(WIN32)
    IF(MSVC)
        SET(CMAKE_SHARED_LINKER_FLAGS_DEBUG "${CMAKE_SHARED_LINKER_FLAGS_DEBUG} /NODEFAULTLIB:MSVCRT")
    ENDIF(MSVC)
ENDIF(WIN32)

SET(LIB_NAME "gwGeological")

SET(HEADER_PATH ${PROJECT_SOURCE_DIR}/include/${LIB_NAME})
INCLUDE_DIRECTORIES(AFTER ${OSG_INCLUDE_DIR})
INCLUDE_DIRECTORIES(AFTER ${OSGEARTH_INCLUDE_DIR})

SET(LIB_PUBLIC_HEADERS
		IGeologicalLayer.h
		IGeologicalSystem.h
		GeologicalSystem.h
		GeologicalLayer.h
)
SET(TARGET_SRC
		GeologicalSystem.cpp
		Plugin.cpp
		GeologicalLayer.cpp
)

ADD_LIBRARY(
    ${LIB_NAME} ${GWEARTH_USER_DEFINED_DYNAMIC_OR_STATIC}
    ${LIB_PUBLIC_HEADERS}
    ${TARGET_SRC} )
	
INCLUDE_DIRECTORIES(${GWEARTH_SOURCE_DIR}/Src ${OSG_INCLUDE_DIR} ${OSGEARTH_INCLUDE_DIR} ${Boost_INCLUDE_DIR})


LINK_WITH_VARIABLES(${LIB_NAME} 
								OSG_LIBRARY 
								OSGDB_LIBRARY
								OSGGA_LIBRARY
								OSGUTIL_LIBRARY
								OSGVIEWER_LIBRARY
								OPENTHREADS_LIBRARY
								OSGEARTH_LIBRARY
								OSGEARTHFEATURES_LIBRARY
								OSGEARTHSYMBOLOGY_LIBRARY
								OSGEARTHUTIL_LIBRARY
								ZLIB_LIBRARIES
								)
 
LINK_INTERNAL(${LIB_NAME} gwUtil)

#LINK_INTERNAL(${LIB_NAME} shlwapi opengl32 glu32)
#LINK_CORELIB_DEFAULT(${LIB_NAME} ${CMAKE_THREAD_LIBS_INIT} ${MATH_LIBRARY})

INCLUDE(ModuleInstall OPTIONAL)